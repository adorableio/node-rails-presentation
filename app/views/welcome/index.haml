%article

  %section
    %h1 Imagine a world without Bundler
    =image_tag 'us-itg.jpg', class: 'avatar'
    %h3= link_to '@itg', 'https://twitter.com/itg'


  %section(data-bespoke-state='aqua')
    %h2 Time to install a gem

  %section
    %h3.bullet Let's install haml!
    %ul
      %li Open your browser
      %li Search google for 'haml ruby'
      %li Scroll around until you find the official haml website
      %li Find whatever obscure link exists for downloading haml
      %li Download the .zip file
      %li Unzip it
      %li Copy all the unzipped files
      %li Open your project folder
      %li Navigate to your /vendor folder and paste your files

  - success_image_class = ['pug', 'bmo']
  - 2.times do |version|
    %section(data-bespoke-state="success #{success_image_class[version]}")
      %h1 SUCCESSSs!!!

    %section(data-bespoke-state='red')
      %h1 Found a bug!

    %section(data-bespoke-state='yellow')
      %h2 Time to update to haml v4.3.#{version+1}

    %section(data-bespoke-state='yellow')
      %h3.bullet Let's <strike>install</strike> update haml!
      %ul
        %li Open your browser
        %li Search google for 'haml ruby'
        %li Scroll around until you find the official haml website
        %li Find whatever obscure link exists for downloading haml
        %li Download the .zip file
        %li Unzip it
        %li Copy all the unzipped files
        %li Open your project folder
        %li Navigate to your /vendor folder and paste your files

  %section(data-bespoke-state='success jack')
    %h1 success...

  %section(data-bespoke-state='red')
    %h1 Found a bug!

  %section(data-bespoke-state='yellow')
    %h2 Time to update to haml v4.3.3

  %section(data-bespoke-state='yellow')
    %h3.bullet Let's <strike>install</strike> update haml!
    %ul
      %li Open your browser
      %li Search google for 'haml ruby'
      %li ...
      %li ...
      %li
        %br
        %br
        %h2 ok. you get the idea

  %section
    %h1 This <b>seriously</b> sucks

  %section
    %h2 We don't tolerate this in Rails

  %section
    %h2.bullet Why do we tolerate this on the front-end?
    %ul
      %li
        %h2.quote "Because there aren't gems for all the front-end codess, <b>dummy!</b>"

  %section
    %h1.bullet True
    %ul
      %li
        %h2 ...sort of

  %section(data-bespoke-state='aqua')
    %h1 Enter <b>node.js</b>

  %section(data-bespoke-state='rainbow-jake')
    %h2.bullet With which we get...
    %ul
      %li NPM (<b>N</b>ode <b>P</b>ackage <b>M</b>anager)
      %li Bower
      %li Browserify

  %section
    %h2 <b>NPM</b> manages packages for node

  %section
    %h2 <b>Bower</b> manages front-end frameworks, libraries, assets, utilities

  %section
    %h2 <b>Browserify</b> bundles up all of your front-end dependencies

  %section(data-bespoke-state='red')
    %h2.quote "But we're using Rails, we don't need <b>node.js</b>!"

  %section(data-bespoke-state='')
    %h1 Oh, right... sorry

  %section(data-bespoke-state='nope')
    %h1 Wait... no...
    %h2 that doesn't make sense

  %section(data-bespoke-state='')
    // For the sake of argument...
    %h2.bullet What if I told you Bundler was written in Perl?
    %ul
      %li
        %h2.quote "But we're using Rails, we don't need Bundler!"

  %section(data-bespoke-state='dont-care')
    %h1 Who cares?

  %section(data-bespoke-state='aqua')
    %h1 Time to install a front-end asset!

  %section
    %h3.bullet Let's install jquery!
    %ul
      %li
        %pre.language-bash
          %code>
            $ npm install jquery --save

  %section(data-bespoke-state='success hammer')
    %h1 SUCCCCESSSSS!!!sssd

  %section(data-bespoke-state='aqua')
    %h1 Integrating with rails

  %section
    %h2
      %b Browserify
      %i.icon-heart-light.red
      %b NPM
    %h3
      %b &
      %i likes
      %b Bower

  %section(data-bespoke-state='')
    %h2 Install browserify
    %pre.language-bash
      %code
        $ npm install browserify --save
    %pre.language-ruby
      %code
        =preserve do
          :escaped
            # Gemfile
            gem 'browserify-rails'
    %small (adds CommonJS module support to Sprockets)

  %section(data-bespoke-state='')
    %h2 Setup the bower install path
    %pre.language-javascript
      %code
        =preserve do
          :escaped
            // .bowerrc
            {
              "directory": "vendor/assets/bower_components"
            }

  %section(data-bespoke-state='')
    %h2 Add load paths for bower and vendor assets
    %pre.language-ruby
      %code
        =preserve do
          :escaped
            # config/application.rb
            config.browserify_rails.paths << [
              '/vendor/assets/bower_components/',
              '/vendor/assets/javascripts/'
            ]

  %section(data-bespoke-state='yellow')
    %h1 What about deploying?

  %section(data-bespoke-state='')
    %pre.language-bash
      %code
        =preserve do
          $ bundle install && npm install && bower install
    %h2 <code>rake assets:precompile</code> your way to awesome

  %section(data-bespoke-state='')
    %h2 Moar Stuff
    %dl
      %dt This presentation
      %dd= link_to 'github.com/adorableio/node-rails-presentation', 'http://github.com/adorableio/node-rails-presentation'

      %dt
        We are
        = link_to '@adorableio', 'https://twitter.com/adorableio'
      %dd
        .row
          .p-25
            = image_tag 'us-itg.jpg', class: 'avatar small'
            = link_to '@itg', 'https://twitter.com/itg'

          .p-25
            = image_tag 'us-jim.jpg', class: 'avatar small'
            = link_to '@jremsikjr', 'https://twitter.com/jremsikjr'

          .p-25
            = image_tag 'us-mark.jpg', class: 'avatar small'
            = link_to '@m5rk', 'https://twitter.com/m5rk'

          .p-25
            = image_tag 'us-ryland.jpg', class: 'avatar small'
            = link_to '@rylnd', 'https://twitter.com/rylnd'

      %dt
        %small (shameless plug)
        %div Adorable Avatars
      %dd
        .row
          .p-25
            = image_tag 'http://avatars-staging.herokuapp.com/avatars/120/itg.png', class: 'avatar small'

          .p-25
            = image_tag 'http://avatars-staging.herokuapp.com/avatars/120/jremsikjr.png', class: 'avatar small'

          .p-25
            = image_tag 'http://avatars-staging.herokuapp.com/avatars/120/m5rk.png', class: 'avatar small'

          .p-25
            = image_tag 'http://avatars-staging.herokuapp.com/avatars/120/ryland.png', class: 'avatar small'
        = link_to 'avatars.adorable.io', 'http://avatars.adorable.io'
